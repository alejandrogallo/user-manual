:PROPERTIES:
:ID: VertexCoulombIntegrals
:END:
#+title: =VertexCoulombIntegrals=
#+OPTIONS: toc:nil

* Brief description
=VertexCoulombIntegrals= prepares a recipe needed for the evaluation of Coulomb integrals.

* Algorithm call

A typical input file snippet to call the =VertexCoulombIntegrals= algorithm is given below.

#+begin_src yaml
- name: VertexCoulombIntegrals
  in:
    slicedCoulombVertex: CoulombVertex
  out:
    coulombIntegrals: CoulombIntegrals
#+end_src


* Algorithm input

#+caption: Input keywords
#+name: focalpoint-input-table
| Keyword               | Value |
|-----------------------+-------|
| =slicedCoulombVertex= |       |
|-----------------------+-------|


* Algorithm output

| Keyword            | Value |
|--------------------+-------|
| =coulombIntegrals= |       |
|--------------------+-------|

** Sample =stdout=

The output of this algorithm reads
#+begin_src sh
step: 8, VertexCoulombIntegrals
number of field variables NF: 2092
realtime 0.001249174 s
#+end_src

** TODO Sample =yaml= output


* Computational complexity

Note that the =VertexCoulombIntegrals= algorithm merely defines a recipe to perform the computation of all integrals. The integrals will only be computed once
their numerical values are needed. Certain types of Coulomb integrals; for example, $V_{cd}^{ab}$ will potentially never be computed if not needed by a later
algorithm. In this manner potential memory bottle-necks are avoided.

* Theory

Coulomb integrals are evaluated using the following expression.
$$ V^{pq}_{sr} = \sum_{G} {\Gamma^\ast}^{pG}_s \Gamma^q_{rG} $$


* Literature
bibliography:../group.bib


